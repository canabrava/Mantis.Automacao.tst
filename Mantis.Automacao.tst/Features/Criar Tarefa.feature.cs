// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Mantis.Automacao.tst.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Criar Tarefa", Description="\tComo: Usuario\r\n\tQuero: Criar tarefas\r\n\tPara que: Minha equipe possa realiza-las", SourceFile="Features\\Criar Tarefa.feature", SourceLine=0)]
    public partial class CriarTarefaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Criar Tarefa.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Criar Tarefa", "\tComo: Usuario\r\n\tQuero: Criar tarefas\r\n\tPara que: Minha equipe possa realiza-las", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("eu esteja logado como administrador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar uma tarefa", SourceLine=9)]
        public virtual void CriarUmaTarefa()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar uma tarefa", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 11
 testRunner.Given("eu entre na tela de criar tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "CATEGORIA",
                        "FREQUENCIA",
                        "GRAVIDADE",
                        "PRIORIDADE",
                        "ATRIBUIR_A",
                        "REUSMO",
                        "DESCRIÇÃO",
                        "PASSOS_PARA_REPRODUZIR",
                        "INFORMAÇÕES_ADICIONAIS",
                        "VISIBILIDADE"});
            table1.AddRow(new string[] {
                        "\"General\"",
                        "\"sempre\"",
                        "\"pequena\"",
                        "\"normal\"",
                        "\"administrador\"",
                        "\"Resumo\"",
                        "\"Descrição\"",
                        "\"Passos para reproduzir\"",
                        "\"Informações adicionais\"",
                        "\"público\""});
#line 12
 testRunner.When("eu entrar com as informações da nova tarefa com as informações:", ((string)(null)), table1, "When ");
#line 15
 testRunner.And("clicar para criar uma nova tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("o sistema deve mostra a tela confirmando a criação da tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And("o sistema deve criar a tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Continuar relatando tarefas", SourceLine=19)]
        public virtual void ContinuarRelatandoTarefas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continuar relatando tarefas", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 21
 testRunner.Given("eu entre na tela de criar tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "CATEGORIA",
                        "FREQUENCIA",
                        "GRAVIDADE",
                        "PRIORIDADE",
                        "ATRIBUIR_A",
                        "REUSMO",
                        "DESCRIÇÃO",
                        "PASSOS_PARA_REPRODUZIR",
                        "INFORMAÇÕES_ADICIONAIS",
                        "VISIBILIDADE"});
            table2.AddRow(new string[] {
                        "\"General\"",
                        "\"sempre\"",
                        "\"pequena\"",
                        "\"normal\"",
                        "\"administrador\"",
                        "\"Resumo\"",
                        "\"Descrição\"",
                        "\"Passos para reproduzir\"",
                        "\"Informações adicionais\"",
                        "\"público\""});
#line 22
 testRunner.When("eu entrar com as informações da nova tarefa com as informações:", ((string)(null)), table2, "When ");
#line 25
 testRunner.And("eu marco a opção de criar mais tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("clicar para criar uma nova tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.Then("o sistema deve mostra a tela confirmando a criação da tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
 testRunner.And("o sistema deve exibir a opção de criar mais tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("o sistema deve criar a tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
