// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Mantis.Automacao.tst.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Criar Tarefa", Description="\tComo: Usuario\r\n\tQuero: Criar tarefas\r\n\tPara que: Minha equipe possa realiza-las", SourceFile="Features\\Criar Tarefa.feature", SourceLine=0)]
    public partial class CriarTarefaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Criar Tarefa.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Criar Tarefa", "\tComo: Usuario\r\n\tQuero: Criar tarefas\r\n\tPara que: Minha equipe possa realiza-las", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("eu esteja logado como administrador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        public virtual void CriarUmaTarefa(string cATEGORIA, string fREQUENCIA, string gRAVIDADE, string pRIORIDADE, string aTRIBUIR_A, string rEUSMO, string dESCRICAO, string pASSOS_PARA_REPRODUZIR, string iNFORMACOES_ADICIONAIS, string vISIBILIDADE, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar uma tarefa", null, exampleTags);
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 11
 testRunner.Given("eu entre na tela de criar tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.When(string.Format("eu entrar com as informações da nova tarefa: \'{0}\', \'{1}\', \'{2}\', \'{3}\', \'{4}\', \'" +
                        "{5}\', \'{6}\', \'{7}\', \'{8}\', \'{9}\'", cATEGORIA, fREQUENCIA, gRAVIDADE, pRIORIDADE, aTRIBUIR_A, rEUSMO, dESCRICAO, pASSOS_PARA_REPRODUZIR, iNFORMACOES_ADICIONAIS, vISIBILIDADE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.And("clicar para criar uma nova tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.Then("o sistema deve mostra a tela confirmando a criação da tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.And("o sistema deve criar a tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar uma tarefa, \"General\"", SourceLine=18)]
        public virtual void CriarUmaTarefa_General()
        {
#line 10
this.CriarUmaTarefa("\"General\"", "\"sempre\"", "\"pequena\"", "\"normal\"", "\"administrador\"", "\"Resumo\"", "\"Descrição\"", "\"Passos para reproduzir\"", "\"Informações adicionais\"", "\"público\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Continuar relatando tarefas", SourceLine=20)]
        public virtual void ContinuarRelatandoTarefas()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Continuar relatando tarefas", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 22
 testRunner.Given("eu entre na tela de criar tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.When("eu entrar com as informações da nova tarefa: \'General\', \'sempre\', \'pequena\', \'nor" +
                    "mal\', \'administrador\', \'Resumo\', \'Descrição\', \'Passos para reproduzir\', \'Informa" +
                    "ções adicionais\', \'público\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("eu marco a opção de criar mais tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("clicar para criar uma nova tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.Then("o sistema deve mostra a tela confirmando a criação da tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.And("o sistema deve exibir a opção de criar mais tarefas", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("o sistema deve criar a tarefa", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
