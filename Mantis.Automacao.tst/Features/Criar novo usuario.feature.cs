// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Mantis.Automacao.tst.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Criar nova conta", Description="\tComo: Administrador\r\n\tQuero: Criar nova conta\r\n\tPara: Que outrar pessoas possam " +
        "usar o Mantis", SourceFile="Features\\Criar novo usuario.feature", SourceLine=0)]
    public partial class CriarNovaContaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Criar novo usuario.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Criar nova conta", "\tComo: Administrador\r\n\tQuero: Criar nova conta\r\n\tPara: Que outrar pessoas possam " +
                    "usar o Mantis", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("eu esteja logado como administrador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        public virtual void CriarNovaContaValida(string uSERNAME, string rEAL_NAME, string e_MAIL, string aCCESS_LEVEL, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CriarConta"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar nova conta valida", null, @__tags);
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 12
 testRunner.And("entre na tela de criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.When(string.Format("eu preencher as informacoes do novo usuario: \'{0}\', \'{1}\', \'{2}\' e <\'ACCESS_LEVEL" +
                        "\'>", uSERNAME, rEAL_NAME, e_MAIL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.And("clicar para criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.Then("eu tenho a confirmacao de que o usuario foi criado corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
 testRunner.And("o novo usuario dever ter sido criado corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta valida, Variant 0", new string[] {
                "CriarConta"}, SourceLine=19)]
        public virtual void CriarNovaContaValida_Variant0()
        {
#line 11
this.CriarNovaContaValida("usuarioTeste", "nomeRealTeste", "usuarioteste@teste.com", "vizualizador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta valida, Variant 1", new string[] {
                "CriarConta"}, SourceLine=19)]
        public virtual void CriarNovaContaValida_Variant1()
        {
#line 11
this.CriarNovaContaValida("usuarioTeste", "nomeRealTeste", "usuarioteste@teste.com", "relator", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta valida, Variant 2", new string[] {
                "CriarConta"}, SourceLine=19)]
        public virtual void CriarNovaContaValida_Variant2()
        {
#line 11
this.CriarNovaContaValida("usuarioTeste", "nomeRealTeste", "usuarioteste@teste.com", "atualizador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta valida, Variant 3", new string[] {
                "CriarConta"}, SourceLine=19)]
        public virtual void CriarNovaContaValida_Variant3()
        {
#line 11
this.CriarNovaContaValida("usuarioTeste", "nomeRealTeste", "usuarioteste@teste.com", "desenvolvedor", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta valida, Variant 4", new string[] {
                "CriarConta"}, SourceLine=19)]
        public virtual void CriarNovaContaValida_Variant4()
        {
#line 11
this.CriarNovaContaValida("usuarioTeste", "nomeRealTeste", "usuarioteste@teste.com", "gerente", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta valida, Variant 5", new string[] {
                "CriarConta"}, SourceLine=19)]
        public virtual void CriarNovaContaValida_Variant5()
        {
#line 11
this.CriarNovaContaValida("usuarioTeste", "nomeRealTeste", "usuarioteste@teste.com", "administrador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario repetido", SourceLine=26)]
        public virtual void CriarNovaContaComNomeDoUsuarioRepetido()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar nova conta com nome do usuario repetido", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 28
 testRunner.And("entre na tela de criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.When("eu preencher as informacoes do novo usuario: \'usuarioTeste\', \'nomeDiferente\', \'te" +
                    "ste@teste.com\' e \'vizualizador\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.And("clicar para criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then("eu vejo uma mensagem de que nao e possivel criar usuario com nome repetido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido(string uSERNAME, string rEAL_NAME, string e_MAIL, string aCCESS_LEVEL, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar nova conta com nome do usuario invalido", null, exampleTags);
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 35
 testRunner.And("entre na tela de criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When(string.Format("eu preencher as informacoes do novo usuario: \'{0}\', \'{1}\', \'{2}\' e <\'ACCESS_LEVEL" +
                        "\'>", uSERNAME, rEAL_NAME, e_MAIL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.And("clicar para criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.Then("eu vejo uma mensagem de erro dizendo que o nome do usuario esta invalido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
 testRunner.And("o novo usuario dever ter sido criado corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario invalido, Variant 0", SourceLine=42)]
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido_Variant0()
        {
#line 34
this.CriarNovaContaComNomeDoUsuarioInvalido("teste*", "nomeRealTeste", "usuarioteste@teste.com", "vizualizador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario invalido, Variant 1", SourceLine=42)]
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido_Variant1()
        {
#line 34
this.CriarNovaContaComNomeDoUsuarioInvalido("teste.", "nomeRealTeste", "usuarioteste@teste.com", "relator", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario invalido, Variant 2", SourceLine=42)]
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido_Variant2()
        {
#line 34
this.CriarNovaContaComNomeDoUsuarioInvalido("teste?", "nomeRealTeste", "usuarioteste@teste.com", "atualizador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario invalido, Variant 3", SourceLine=42)]
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido_Variant3()
        {
#line 34
this.CriarNovaContaComNomeDoUsuarioInvalido("teste%", "nomeRealTeste", "usuarioteste@teste.com", "desenvolvedor", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario invalido, Variant 4", SourceLine=42)]
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido_Variant4()
        {
#line 34
this.CriarNovaContaComNomeDoUsuarioInvalido("teste#", "nomeRealTeste", "usuarioteste@teste.com", "gerente", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com nome do usuario invalido, Variant 5", SourceLine=42)]
        public virtual void CriarNovaContaComNomeDoUsuarioInvalido_Variant5()
        {
#line 34
this.CriarNovaContaComNomeDoUsuarioInvalido("", "nomeRealTeste", "usuarioteste@teste.com", "administrador", ((string[])(null)));
#line hidden
        }
        
        public virtual void CriarNovaContaComE_MailInvalido(string uSERNAME, string rEAL_NAME, string e_MAIL, string aCCESS_LEVEL, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criar nova conta com e-mail invalido", null, exampleTags);
#line 51
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 52
 testRunner.And("entre na tela de criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.When(string.Format("eu preencher as informacoes do novo usuario: \'{0}\', \'{1}\', \'{2}\' e <\'ACCESS_LEVEL" +
                        "\'>", uSERNAME, rEAL_NAME, e_MAIL), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.And("clicar para criar nova conta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.Then("eu vejo uma mensagem de erro dizendo que o e-mail esta invalido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
 testRunner.And("o novo usuario nao dever ter sido criado corretamente", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com e-mail invalido, Variant 0", SourceLine=59)]
        public virtual void CriarNovaContaComE_MailInvalido_Variant0()
        {
#line 51
this.CriarNovaContaComE_MailInvalido("usuarioTeste", "nomeRealTeste", "teste.com", "vizualizador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com e-mail invalido, Variant 1", SourceLine=59)]
        public virtual void CriarNovaContaComE_MailInvalido_Variant1()
        {
#line 51
this.CriarNovaContaComE_MailInvalido("usuarioTeste", "nomeRealTeste", "@teste.com", "relator", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criar nova conta com e-mail invalido, Variant 2", SourceLine=59)]
        public virtual void CriarNovaContaComE_MailInvalido_Variant2()
        {
#line 51
this.CriarNovaContaComE_MailInvalido("usuarioTeste", "nomeRealTeste", "usuarioteste", "atualizador", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
