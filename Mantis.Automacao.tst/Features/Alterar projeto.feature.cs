// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Mantis.Automacao.tst.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Alterar projeto", Description="\tComo: Administrador\r\n\tQuero: Alterar as informações de um projeto\r\n\tPara que: Es" +
        "sas informações fiquem corretas", SourceFile="Features\\Alterar projeto.feature", SourceLine=0)]
    public partial class AlterarProjetoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Alterar projeto.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Alterar projeto", "\tComo: Administrador\r\n\tQuero: Alterar as informações de um projeto\r\n\tPara que: Es" +
                    "sas informações fiquem corretas", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
 testRunner.Given("exista um projeto criado com os dados: \'nomeProjeto\', \'desenvolvimento\', \'público" +
                    "\', \'Projeto para teste do MantisBT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.And("eu esteja logado como administrador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void AlterarAsInformaccoesDeUmProjeto(string nOME_PROJETO, string eSTADO, string vISIBILIDADE, string dESCRICAO, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar as informaçcoes de um projeto", null, exampleTags);
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 13
 testRunner.Given("eu entre na tela de gerenciar o projeto \'nomeProjeto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When(string.Format("eu entrar com as novas informacoes do projeto: \'{0}\', \'{1}\', \'{2}\', \'{3}\'", nOME_PROJETO, eSTADO, vISIBILIDADE, dESCRICAO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.And("eu clicar em atualizar projeto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("o sistema deve me levar para a pagina de gerenciar projetos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.And("o projeto deve estar salvo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar as informaçcoes de um projeto, Variant 0", SourceLine=20)]
        public virtual void AlterarAsInformaccoesDeUmProjeto_Variant0()
        {
#line 12
this.AlterarAsInformaccoesDeUmProjeto("projetoTeste", "desenvolvimento", "público", "Projeto para teste do MantisBT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar as informaçcoes de um projeto, Variant 1", SourceLine=20)]
        public virtual void AlterarAsInformaccoesDeUmProjeto_Variant1()
        {
#line 12
this.AlterarAsInformaccoesDeUmProjeto("projetoTeste", "release", "público", "Projeto para teste do MantisBT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar as informaçcoes de um projeto, Variant 2", SourceLine=20)]
        public virtual void AlterarAsInformaccoesDeUmProjeto_Variant2()
        {
#line 12
this.AlterarAsInformaccoesDeUmProjeto("projetoTeste", "estável", "público", "Projeto para teste do MantisBT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar as informaçcoes de um projeto, Variant 3", SourceLine=20)]
        public virtual void AlterarAsInformaccoesDeUmProjeto_Variant3()
        {
#line 12
this.AlterarAsInformaccoesDeUmProjeto("projetoTeste", "obsoleto", "público", "Projeto para teste do MantisBT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar as informaçcoes de um projeto, Variant 4", SourceLine=20)]
        public virtual void AlterarAsInformaccoesDeUmProjeto_Variant4()
        {
#line 12
this.AlterarAsInformaccoesDeUmProjeto("projetoTeste", "desenvolvimento", "privado", "Projeto para teste do MantisBT", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar o nome do projeto para o nome de um projeto já existente", SourceLine=26)]
        public virtual void AlterarONomeDoProjetoParaONomeDeUmProjetoJaExistente()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar o nome do projeto para o nome de um projeto já existente", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
this.FeatureBackground();
#line 28
 testRunner.Given("exista um projeto criado com os dados: \'nomeProjeto2\', \'desenvolvimento\', \'públic" +
                    "o\', \'Projeto para teste do MantisBT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("eu entre na tela de gerenciar o projeto \'nomeProjeto2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("eu entrar com as novas informacoes do projeto: \'nomeProjeto2\', \'desenvolvimento\'," +
                    " \'público\', \'Projeto para teste do MantisBT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.And("eu clicar em atualizar projeto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.Then("eu devo ver a mensagem de que já existe um projeto com esse nome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
